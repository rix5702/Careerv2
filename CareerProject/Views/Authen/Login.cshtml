
@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="cs-body">
    <div class="cs-container">
        <h2>Login Form</h2>
        <p>"Build an outstanding profile and seize ideal career opportunities."</p>

        <form action="@Url.Action("Login", "Authen")" method="POST" class="cs-form">
            @if (ViewBag.signin != null)
            {
                <div class="cs-input-group">
                    <label style="color: red">
                       @ViewBag.signin
                    </label>
                </div>
            }
            <!-- Email -->
            <div class="cs-input-group">
                <label for="email" class="cs-label">
                    <i class="cs-icon email-icon"></i> Email
                </label>
                <input type="email" id="email" name="email" class="cs-input" placeholder="Your email" required>
            </div>

            <!-- Password -->
            <div class="cs-input-group">
                <label for="password" class="cs-label">
                    <i class="cs-icon password-icon"></i> Password
                </label>
                <input type="password" id="password" name="password" class="cs-input" placeholder="Your Password" required>
                <i class="cs-icon toggle-password"></i>
            </div>

            <!-- Confirm Password -->
            <div class="cs-input-group">
                <label for="confirmPassword" class="cs-label">
                    <i class="cs-icon confirm-password-icon"></i> Confirm Password
                </label>
                <input type="password" id="confirmPassword" name="confirmPassword" class="cs-input" placeholder="Confirm Password" required>
                <i class="cs-icon toggle-password"></i>
            </div>

            <!-- Terms & Conditions Checkbox -->
            <div class="cs-input-group">
                <label>
                    <input type="checkbox" name="company" id="company"> Login for Company
                </label>
            </div>

            <!-- Register Button -->
            <div class="cs-input-group">
                <button type="submit" class="cs-submit-btn">Login</button>
            </div>
            <div class="cs-input-group">
                <div id="g_id_onload"
                     data-client_id="496709422284-c7cbt0ho3228hu69ardbimpid56g8erc.apps.googleusercontent.com"
                     data-callback="handleCredentialResponse"
                     data-auto_prompt="true">
                </div>
                <div class="g_id_signin" data-type="standard"></div>
            </div>
            <div class="cs-input-group">
                <a href="@Url.Action("SignUp", "Authen")" class="cs-submit-btn">Register</a>
            </div>
        </form>
    </div>
</div>


<script src="https://accounts.google.com/gsi/client" async defer></script>

<script>
    // Handle the response after Google Sign-In
    function handleCredentialResponse(response) {
        // The ID token you get after user signs in
        console.log("Encoded JWT ID token: " + response.credential);

        // You can decode the token using base64 or send it to your backend
        const data = parseJwt(response.credential);

        console.log("User Info: ", data);

        //// Display user information
        //document.getElementById("user-info").innerHTML = `
        //        <h2>User Information</h2>
        //        <p><strong>Name:</strong> ${data.name}</p>
        //        <p><strong>Email:</strong> ${data.email}</p>
        //        <p><strong>Picture:</strong> <img src="${data.picture}" alt="User Picture"></p>
        //    `;

        
        //$.post("/Authen/GoogleLogin", { name: data.name, email: data.email }, function (data) {

        //    alert("Đã thêm vào giỏ hàng")
        //});
        fetch('/Authen/GoogleLogin', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                name: data.name,
                email: data.email
            })
        }).then(response => {
            if (response.redirected) {
                // If the response is a redirect, follow it
                window.location.href = response.url;
            } else {
                // Handle other responses if needed
                console.log("No redirection occurred");
            }
        });
    }

    // Function to decode the JWT token
    function parseJwt(token) {
        var base64Url = token.split('.')[1];
        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
        var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {
            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
        }).join(''));

        return JSON.parse(jsonPayload);
    }
</script>